name: Prepare Rust Workflows
description: Prepare Rust Workflows
inputs:
  build:
    description: 'Matrix build input object {build, os, target}'
    required: true
  install-wasm-pack:
    description: Boolean of whether or not to install wasm-pack
    default: false

runs:
  using: "composite"
  steps:
    ### INSTALL RUST ###
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      id: toolchain
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        profile: minimal
        override: true

    # NB: We install gnu-tar because BSD tar is buggy on Github's macos machines. https://github.com/actions/cache/issues/403
    - name: Install GNU tar (Macos)
      if: matrix.build == 'macos'
      run: |
        brew install gnu-tar
        echo PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH" >> $GITHUB_ENV

    ### BUILD CACHE ###
    - name: Cache cargo registry, target, index
      uses: actions/cache@v2
      id: cache-cargo
      env:
        cache-name: cache-cargo
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/bin
          ~/.cargo/git
          target
        key: ${{ matrix.build }}-${{ env.cache-name }}-${{ steps.toolchain.outputs.rustc_hash }}-rust-${{ hashFiles('**/Cargo.lock') }}

    # Install wasm-pack
    - name: Install wasm-pack (unix)
      if: inputs.install-wasm-pack && matrix.build != 'windows'
      shell: bash
      run: which wasm-pack || curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

    - name: Install wasm-pack (windows)
      if: inputs.install-wasm-pack && matrix.build == 'windows'
      run: npm install -g wasm-pack
