{"run_id":"1611342066-711812000","line":5459,"new":{"module_name":"tests__features__basic","snapshot_name":"single_service_does_not_remove___typename_on_root_types","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery GetUser {\n  __typename\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611342066-711812000","line":4743,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_type_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery($foo:String!) {\n  __type(name:$foo) {\n    enumValues{ __typename name }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611342066-711812000","line":4628,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_schema_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611342554-613068000","line":4743,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_type_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery($foo:String!) {\n  __type(name:$foo) {\n    enumValues{ __typename name }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611342554-613068000","line":4628,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_schema_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611342554-613068000","line":5459,"new":{"module_name":"tests__features__basic","snapshot_name":"single_service_does_not_remove___typename_on_root_types","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery GetUser {\n  __typename\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611343918-53770000","line":5459,"new":{"module_name":"tests__features__basic","snapshot_name":"single_service_does_not_remove___typename_on_root_types","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery GetUser {\n  __typename\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611343918-53770000","line":4743,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_type_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery($foo:String!) {\n  __type(name:$foo) {\n    enumValues{ __typename name }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611343918-53770000","line":4628,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_schema_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611344253-334627000","line":5459,"new":{"module_name":"tests__features__basic","snapshot_name":"single_service_does_not_remove___typename_on_root_types","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery GetUser {\n  __typename\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611344253-334627000","line":4743,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_type_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery($foo:String!) {\n  __type(name:$foo) {\n    enumValues{ __typename name }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611344253-334627000","line":4628,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_schema_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611344920-188152000","line":4628,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_schema_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611344920-188152000","line":4743,"new":{"module_name":"tests__features__basic","snapshot_name":"introspection_can_execute_type_introspection_query","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery($foo:String!) {\n  __type(name:$foo) {\n    enumValues{ __typename name }\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611344920-188152000","line":5459,"new":{"module_name":"tests__features__basic","snapshot_name":"single_service_does_not_remove___typename_on_root_types","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery GetUser {\n  __typename\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": null\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\"\n}"}}
{"run_id":"1611345795-298376000","line":23,"new":{"module_name":"tests__features__basic","snapshot_name":"abstract_types_handles_an_abstract_type_from_the_base_service","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery GetProduct($upc: String!) {\n  product(upc: $upc) {\n    upc\n    name\n    price\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": {\n    \"kind\": \"Sequence\",\n    \"nodes\": [\n      {\n        \"kind\": \"Fetch\",\n        \"serviceName\": \"product\",\n        \"variableUsages\": [\n          \"upc\"\n        ],\n        \"operation\": \"query($upc:String!){product(upc:$upc){__typename ...on Book{upc __typename price}...on Furniture{upc name price}}}\"\n      },\n      {\n        \"kind\": \"Flatten\",\n        \"path\": [\n          \"product\"\n        ],\n        \"node\": {\n          \"kind\": \"Fetch\",\n          \"serviceName\": \"books\",\n          \"requires\": [\n            {\n              \"kind\": \"InlineFragment\",\n              \"typeCondition\": \"Book\",\n              \"selections\": [\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"__typename\"\n                }\n              ]\n            }\n          ],\n          \"variableUsages\": [],\n          \"operation\": \"query($representations:[_Any!]!){_entities(representations:$representations){...on Book{__typename title year}}}\"\n        }\n      },\n      {\n        \"kind\": \"Flatten\",\n        \"path\": [\n          \"product\"\n        ],\n        \"node\": {\n          \"kind\": \"Fetch\",\n          \"serviceName\": \"product\",\n          \"requires\": [\n            {\n              \"kind\": \"InlineFragment\",\n              \"typeCondition\": \"Book\",\n              \"selections\": [\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"__typename\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"title\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"year\"\n                }\n              ]\n            }\n          ],\n          \"variableUsages\": [],\n          \"operation\": \"query($representations:[_Any!]!){_entities(representations:$representations){...on Book{name}}}\"\n        }\n      }\n    ]\n  }\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": {\n    \"kind\": \"Sequence\",\n    \"nodes\": [\n      {\n        \"kind\": \"Fetch\",\n        \"serviceName\": \"product\",\n        \"variableUsages\": [\n          \"upc\"\n        ],\n        \"operation\": \"query($upc:String!){product(upc:$upc){__typename ...on Book{upc __typename isbn price}...on Furniture{upc name price}}}\"\n      },\n      {\n        \"kind\": \"Flatten\",\n        \"path\": [\n          \"product\"\n        ],\n        \"node\": {\n          \"kind\": \"Fetch\",\n          \"serviceName\": \"books\",\n          \"requires\": [\n            {\n              \"kind\": \"InlineFragment\",\n              \"typeCondition\": \"Book\",\n              \"selections\": [\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"__typename\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"isbn\"\n                }\n              ]\n            }\n          ],\n          \"variableUsages\": [],\n          \"operation\": \"query($representations:[_Any!]!){_entities(representations:$representations){...on Book{__typename isbn title year}}}\"\n        }\n      },\n      {\n        \"kind\": \"Flatten\",\n        \"path\": [\n          \"product\"\n        ],\n        \"node\": {\n          \"kind\": \"Fetch\",\n          \"serviceName\": \"product\",\n          \"requires\": [\n            {\n              \"kind\": \"InlineFragment\",\n              \"typeCondition\": \"Book\",\n              \"selections\": [\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"__typename\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"isbn\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"title\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"year\"\n                }\n              ]\n            }\n          ],\n          \"variableUsages\": [],\n          \"operation\": \"query($representations:[_Any!]!){_entities(representations:$representations){...on Book{name}}}\"\n        }\n      }\n    ]\n  }\n}"}}
{"run_id":"1611345956-425722000","line":23,"new":{"module_name":"tests__features__basic","snapshot_name":"abstract_types_handles_an_abstract_type_from_the_base_service","metadata":{"source":"query-planner/tests/features/basic.rs","expression":"plan(include_str!(\"basic/schema.graphql\"),\n     r##\"\nquery GetProduct($upc: String!) {\n  product(upc: $upc) {\n    upc\n    name\n    price\n  }\n}\n\"##,\n     QueryPlanningOptions{auto_fragmentization: false,})"},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": {\n    \"kind\": \"Sequence\",\n    \"nodes\": [\n      {\n        \"kind\": \"Fetch\",\n        \"serviceName\": \"product\",\n        \"variableUsages\": [\n          \"upc\"\n        ],\n        \"operation\": \"query($upc:String!){product(upc:$upc){__typename ...on Book{upc __typename price}...on Furniture{upc name price}}}\"\n      },\n      {\n        \"kind\": \"Flatten\",\n        \"path\": [\n          \"product\"\n        ],\n        \"node\": {\n          \"kind\": \"Fetch\",\n          \"serviceName\": \"books\",\n          \"requires\": [\n            {\n              \"kind\": \"InlineFragment\",\n              \"typeCondition\": \"Book\",\n              \"selections\": [\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"__typename\"\n                }\n              ]\n            }\n          ],\n          \"variableUsages\": [],\n          \"operation\": \"query($representations:[_Any!]!){_entities(representations:$representations){...on Book{__typename title year}}}\"\n        }\n      },\n      {\n        \"kind\": \"Flatten\",\n        \"path\": [\n          \"product\"\n        ],\n        \"node\": {\n          \"kind\": \"Fetch\",\n          \"serviceName\": \"product\",\n          \"requires\": [\n            {\n              \"kind\": \"InlineFragment\",\n              \"typeCondition\": \"Book\",\n              \"selections\": [\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"__typename\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"title\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"year\"\n                }\n              ]\n            }\n          ],\n          \"variableUsages\": [],\n          \"operation\": \"query($representations:[_Any!]!){_entities(representations:$representations){...on Book{name}}}\"\n        }\n      }\n    ]\n  }\n}"},"old":{"module_name":"tests__features__basic","metadata":{},"snapshot":"{\n  \"kind\": \"QueryPlan\",\n  \"node\": {\n    \"kind\": \"Sequence\",\n    \"nodes\": [\n      {\n        \"kind\": \"Fetch\",\n        \"serviceName\": \"product\",\n        \"variableUsages\": [\n          \"upc\"\n        ],\n        \"operation\": \"query($upc:String!){product(upc:$upc){__typename ...on Book{upc __typename isbn price}...on Furniture{upc name price}}}\"\n      },\n      {\n        \"kind\": \"Flatten\",\n        \"path\": [\n          \"product\"\n        ],\n        \"node\": {\n          \"kind\": \"Fetch\",\n          \"serviceName\": \"books\",\n          \"requires\": [\n            {\n              \"kind\": \"InlineFragment\",\n              \"typeCondition\": \"Book\",\n              \"selections\": [\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"__typename\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"isbn\"\n                }\n              ]\n            }\n          ],\n          \"variableUsages\": [],\n          \"operation\": \"query($representations:[_Any!]!){_entities(representations:$representations){...on Book{__typename isbn title year}}}\"\n        }\n      },\n      {\n        \"kind\": \"Flatten\",\n        \"path\": [\n          \"product\"\n        ],\n        \"node\": {\n          \"kind\": \"Fetch\",\n          \"serviceName\": \"product\",\n          \"requires\": [\n            {\n              \"kind\": \"InlineFragment\",\n              \"typeCondition\": \"Book\",\n              \"selections\": [\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"__typename\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"isbn\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"title\"\n                },\n                {\n                  \"kind\": \"Field\",\n                  \"name\": \"year\"\n                }\n              ]\n            }\n          ],\n          \"variableUsages\": [],\n          \"operation\": \"query($representations:[_Any!]!){_entities(representations:$representations){...on Book{name}}}\"\n        }\n      }\n    ]\n  }\n}"}}
